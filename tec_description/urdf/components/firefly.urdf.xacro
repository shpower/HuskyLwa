<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      firefly.urdf.xacro
\authors   Arnold <akalmbach@clearpathrobotics.com>
\copyright Copyright (c) 2014, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the 
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<robot name="sensor_kinect" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Parameterised in part by the values in turtlebot_properties.urdf.xacro -->
    <xacro:macro name="sensor_firefly" params="parent name *origin">
        <joint name="${name}_camera_base_joint" type="fixed">
            <insert_block name="origin" />
            <parent link="${parent}"/>
            <child link="${name}_camera_base_link"/>
        </joint>

        <link name="${name}_camera_base_link">
            <inertial>
                <mass value="1e-5" />
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
            </inertial>       
			<visual>
				<origin xyz="0 0 0" rpy="0 0 0" />
				<geometry>
					<box size="0.02 0.02 0.02" />
				</geometry>
				<material name="Black" />
			</visual>
            <visual>
				<origin xyz="0.005 0 0" rpy="0 ${M_PI/2} 0" />
				<geometry>
					<cylinder radius="0.0025" length="0.0025" />
				</geometry>
				<material name="Black" />
			</visual>
			<collision>
				<origin xyz="0 0 0" rpy="0 0 0" />
				<geometry>
                    <!-- The mesh is included with the sensor mast mesh -->
					<box size="0.02 0.02 0.02" />
				</geometry>
				<material name="Black" />
			</collision>
            <collision>
				<origin xyz="0.005 0 0" rpy="0 ${M_PI/2} 0" />
				<geometry>
					<cylinder radius="0.0025" length="0.0025" />
				</geometry>
				<material name="Black" />
			</collision>
        </link>
        <gazebo reference="${name}_camera_base_link">
            <material>Gazebo/FlatBlack</material>
        </gazebo>
        
        <gazebo reference="${name}_camera_base_link">
            <sensor type="camera" name="${name}_camera_controller">
                <update_rate>30.0</update_rate>
                <camera name="{name}">
                    <horizontal_fov>1.3962634</horizontal_fov>
                    <image>
                        <width>800</width>
                        <height>800</height>
                        <format>R8G8B8</format>
                    </image>
                    <clip>
                        <near>0.02</near>
                        <far>300</far>
                    </clip>
                    <noise>
                        <type>gaussian</type>
                        <!-- Noise is sampled independently per pixel on each frame.  
                           That pixel's noise value is added to each of its color
                           channels, which at that point lie in the range [0,1]. -->
                        <mean>0.0</mean>
                        <stddev>0.007</stddev>
                    </noise>
                </camera>
                <plugin name="${name}_camera_controller" filename="libgazebo_ros_camera.so">
                    <alwaysOn>true</alwaysOn>
                    <updateRate>30.0</updateRate>
                    <robotNamespace>${name}</robotNamespace>
                    <cameraName>camera</cameraName>
                    <imageTopicName>image_raw</imageTopicName>
                    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                    <frameName>${name}_camera_base_link</frameName>
                    <hackBaseline>0.07</hackBaseline>
                    <distortionK1>0.0</distortionK1>
                    <distortionK2>0.0</distortionK2>
                    <distortionK3>0.0</distortionK3>
                    <distortionT1>0.0</distortionT1>
                    <distortionT2>0.0</distortionT2>
                </plugin>
            </sensor>
        </gazebo>
        
    </xacro:macro>
</robot>
